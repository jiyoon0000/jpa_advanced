plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // lombok
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    //test할 때 필요한 의존성
    implementation 'at.favre.lib:bcrypt:0.10.2' // BCrypt 라이브러리
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3' // JUnit5
}

tasks.named('test') {
    useJUnitPlatform()
}

//Java 컴파일러에 대한 설정 정의
//어노테이션 프로세서를 통해 소스파일 출력 디렉토리를 지정
tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main"))
}

//소스 디렉토리 경로에 어노테이션 프로세서를 통해 생성된 Q클래스 디렉토리를 추가
//Gradle이 해당 디렉토리를 프로젝트의 소스 경로로 인식하여 Q클래스를 사용할 수 있게 설정
sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}

sourceSets {
    test {
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}

